local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")

-- 等待游戏加载完成
if not game:IsLoaded() then
    game.Loaded:Wait()
end

-- 等待本地玩家加载
local LocalPlayer = Players.LocalPlayer
if not LocalPlayer then
    Players:GetPropertyChangedSignal("LocalPlayer"):Wait()
    LocalPlayer = Players.LocalPlayer
end

-- 显示作者信息和提示
local authorMessage = Instance.new("Message")
authorMessage.Text = "单一物体漂浮控制脚本 - 作者: XTTT\n\n提示1: 此脚本控制的物体只能载着自己飞行，控制物体周围有其他玩家离太近时此脚本将暂时失效\n\n提示2: 按了停止翻转后再按任意移动键才能真正停止翻转\n\n提示3: 此脚本控制物体载自己飞行时所有人可见"
authorMessage.Parent = Workspace
delay(5, function()
    authorMessage:Destroy()
end)

-- 全局变量
_G.selectedPart = nil
_G.selectedHighlight = nil
_G.floatSpeed = 10
_G.moveDirection = Vector3.new(0, 1, 0)
_G.flipX = 0
_G.flipY = 0
_G.flipZ = 0
_G.rotationSpeed = 1

-- 设置模拟半径
local function setupSimulationRadius()
    local success, err = pcall(function()
        RunService.Heartbeat:Connect(function()
            pcall(function()
                sethiddenproperty(LocalPlayer, "SimulationRadius", math.huge)
                sethiddenproperty(LocalPlayer, "MaxSimulationRadius", math.huge)
            end)
        end)
    end)
    
    if not success then
        warn("模拟半径设置失败: " .. tostring(err))
    end
end

setupSimulationRadius()

-- 创建高亮效果
local function createHighlight(part)
    if _G.selectedHighlight then
        _G.selectedHighlight:Destroy()
        _G.selectedHighlight = nil
    end
    
    local highlight = Instance.new("SelectionBox")
    highlight.Name = "FloatingHighlight"
    highlight.Adornee = part
    highlight.Color3 = Color3.fromRGB(0, 0, 255) -- 蓝色
    highlight.LineThickness = 0.05
    highlight.Parent = part
    
    _G.selectedHighlight = highlight
    return highlight
end

-- 移除高亮效果
local function removeHighlight()
    if _G.selectedHighlight then
        _G.selectedHighlight:Destroy()
        _G.selectedHighlight = nil
    end
end

-- 处理零件函数
local function ProcessPart(part)
    if not part or not part.Parent then return end
    
    -- 清除旧的身体力
    for _, child in ipairs(part:GetChildren()) do
        if child:IsA("BodyVelocity") or child:IsA("BodyAngularVelocity") or 
           child:IsA("BodyForce") or child:IsA("BodyGyro") or 
           child:IsA("BodyPosition") or child:IsA("BodyThrust") then
            child:Destroy()
        end
    end
    
    -- 添加身体力
    local bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.Velocity = _G.moveDirection.Unit * _G.floatSpeed
    bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
    bodyVelocity.Parent = part
    
    -- 添加角速度以实现翻转
    local bodyAngularVelocity = Instance.new("BodyAngularVelocity")
    bodyAngularVelocity.AngularVelocity = Vector3.new(_G.flipX, _G.flipY, _G.flipZ) * _G.rotationSpeed
    bodyAngularVelocity.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
    bodyAngularVelocity.Parent = part
end

-- 停止零件移动
local function StopPart()
    if _G.selectedPart then
        for _, child in ipairs(_G.selectedPart:GetChildren()) do
            if child:IsA("BodyVelocity") or child:IsA("BodyAngularVelocity") then
                child:Destroy()
            end
        end
    end
end

-- 停止零件翻转
local function StopFlip()
    if _G.selectedPart then
        for _, child in ipairs(_G.selectedPart:GetChildren()) do
            if child:IsA("BodyAngularVelocity") then
                child:Destroy()
            end
        end
        -- 重置翻转值
        _G.flipX = 0
        _G.flipY = 0
        _G.flipZ = 0
    end
end

-- 更新零件移动
local function UpdatePartMovement()
    if _G.selectedPart then
        StopPart()
        ProcessPart(_G.selectedPart)
    end
end

-- 选择零件函数
local function SelectPart(part)
    -- 检查零件是否可控制
    if part:IsA("Part") and not part.Anchored and not part.Parent:FindFirstChild("Humanoid") and 
       not part.Parent:FindFirstChild("Head") and part.Parent ~= LocalPlayer.Character then
        
        -- 如果已经有选中的零件，取消选择
        if _G.selectedPart and _G.selectedPart ~= part then
            removeHighlight()
            StopPart()
        end
        
        -- 选择新零件
        _G.selectedPart = part
        createHighlight(part)
        ProcessPart(part)
        return true
    end
    return false
end

-- 取消选择零件
local function DeselectPart()
    if _G.selectedPart then
        removeHighlight()
        StopPart()
        _G.selectedPart = nil
    end
end

-- 射线检测函数
local function getTargetPart()
    local camera = Workspace.CurrentCamera
    local mousePos = UserInputService:GetMouseLocation()
    local unitRay = camera:ViewportPointToRay(mousePos.X, mousePos.Y)
    local ray = Ray.new(unitRay.Origin, unitRay.Direction * 1000)
    
    local part, position = Workspace:FindPartOnRay(ray, LocalPlayer.Character)
    return part
end

-- 使GUI元素可拖动的函数
local function MakeDraggable(gui)
    gui.Active = true
    gui.Draggable = true
    
    local dragHandle = Instance.new("Frame")
    dragHandle.Name = "DragHandle"
    dragHandle.Size = UDim2.new(0, 20, 0, 20)
    dragHandle.Position = UDim2.new(1, -20, 0, 0)
    dragHandle.BackgroundColor3 = Color3.fromRGB(150, 150, 150)
    dragHandle.BorderSizePixel = 0
    dragHandle.Parent = gui
    
    local gripIcon = Instance.new("TextLabel")
    gripIcon.Name = "GripIcon"
    gripIcon.Size = UDim2.new(1, 0, 1, 0)
    gripIcon.Position = UDim2.new(0, 0, 0, 0)
    gripIcon.Text = "≡"
    gripIcon.TextColor3 = Color3.new(1, 1, 1)
    gripIcon.BackgroundTransparency = 1
    gripIcon.TextSize = 14
    gripIcon.Parent = dragHandle
    
    dragHandle.Active = true
    dragHandle.Draggable = true
end

-- 创建手机友好的GUI
local function CreateMobileGUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "SingleObjectFloatingControl"
    screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
    
    -- 选择模式开关按钮 - 移动到右上角
    local selectModeButton = Instance.new("TextButton")
    selectModeButton.Name = "SelectModeToggle"
    selectModeButton.Size = UDim2.new(0, 150, 0, 50)
    selectModeButton.Position = UDim2.new(1, -160, 0, 10) -- 右上角
    selectModeButton.Text = "选择模式: 关闭"
    selectModeButton.TextSize = 16
    selectModeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    selectModeButton.TextColor3 = Color3.new(1, 1, 1)
    selectModeButton.Parent = screenGui
    
    MakeDraggable(selectModeButton)
    
    -- 控制面板
    local controlPanel = Instance.new("Frame")
    controlPanel.Name = "ControlPanel"
    controlPanel.Size = UDim2.new(0, 300, 0, 550) -- 增加高度以容纳新按钮
    controlPanel.Position = UDim2.new(0.5, -150, 0.5, -275)
    controlPanel.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    controlPanel.BackgroundTransparency = 0.3
    controlPanel.BorderSizePixel = 0
    controlPanel.Visible = false
    controlPanel.Parent = screenGui
    
    MakeDraggable(controlPanel)
    
    -- 速度控制
    local speedLabel = Instance.new("TextLabel")
    speedLabel.Name = "SpeedLabel"
    speedLabel.Size = UDim2.new(1, 0, 0, 40)
    speedLabel.Position = UDim2.new(0, 0, 0, 10)
    speedLabel.Text = "速度: " .. _G.floatSpeed
    speedLabel.TextColor3 = Color3.new(1, 1, 1)
    speedLabel.BackgroundTransparency = 1
    speedLabel.TextSize = 20
    speedLabel.Parent = controlPanel
    
    -- 速度增加按钮
    local speedUpButton = Instance.new("TextButton")
    speedUpButton.Name = "SpeedUp"
    speedUpButton.Size = UDim2.new(0, 60, 0, 60)
    speedUpButton.Position = UDim2.new(0.7, 0, 0, 60)
    speedUpButton.Text = "+"
    speedUpButton.TextSize = 30
    speedUpButton.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
    speedUpButton.TextColor3 = Color3.new(1, 1, 1)
    speedUpButton.Parent = controlPanel
    
    -- 速度减少按钮
    local speedDownButton = Instance.new("TextButton")
    speedDownButton.Name = "SpeedDown"
    speedDownButton.Size = UDim2.new(0, 60, 0, 60)
    speedDownButton.Position = UDim2.new(0.3, 0, 0, 60)
    speedDownButton.Text = "-"
    speedDownButton.TextSize = 30
    speedDownButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
    speedDownButton.TextColor3 = Color3.new(1, 1, 1)
    speedDownButton.Parent = controlPanel
    
    -- 停止移动按钮
    local stopButton = Instance.new("TextButton")
    stopButton.Name = "Stop"
    stopButton.Size = UDim2.new(0, 100, 0, 40)
    stopButton.Position = UDim2.new(0.5, -50, 0, 130)
    stopButton.Text = "停止移动"
    stopButton.TextSize = 16
    stopButton.BackgroundColor3 = Color3.fromRGB(200, 100, 100)
    stopButton.TextColor3 = Color3.new(1, 1, 1)
    stopButton.Parent = controlPanel
    
    -- 停止翻转按钮
    local stopFlipButton = Instance.new("TextButton")
    stopFlipButton.Name = "StopFlip"
    stopFlipButton.Size = UDim2.new(0, 100, 0, 40)
    stopFlipButton.Position = UDim2.new(0.5, -50, 0, 180)
    stopFlipButton.Text = "停止翻转"
    stopFlipButton.TextSize = 16
    stopFlipButton.BackgroundColor3 = Color3.fromRGB(200, 100, 100)
    stopFlipButton.TextColor3 = Color3.new(1, 1, 1)
    stopFlipButton.Parent = controlPanel
    
    -- 方向控制标题
    local directionLabel = Instance.new("TextLabel")
    directionLabel.Name = "DirectionLabel"
    directionLabel.Size = UDim2.new(1, 0, 0, 40)
    directionLabel.Position = UDim2.new(0, 0, 0, 230)
    directionLabel.Text = "移动方向"
    directionLabel.TextColor3 = Color3.new(1, 1, 1)
    directionLabel.BackgroundTransparency = 1
    directionLabel.TextSize = 20
    directionLabel.Parent = controlPanel
    
    -- 方向按钮网格
    local directions = {
        {name = "向上", dir = Vector3.new(0, 1, 0), pos = UDim2.new(0.5, -30, 0, 280)},
        {name = "向下", dir = Vector3.new(0, -1, 0), pos = UDim2.new(0.5, -30, 0, 350)},
        {name = "向前", dir = Vector3.new(0, 0, 1), pos = UDim2.new(0.2, -30, 0, 315)},
        {name = "向后", dir = Vector3.new(0, 0, -1), pos = UDim2.new(0.8, -30, 0, 315)},
        {name = "向左", dir = Vector3.new(-1, 0, 0), pos = UDim2.new(0.05, -30, 0, 315)},
        {name = "向右", dir = Vector3.new(1, 0, 0), pos = UDim2.new(0.95, -30, 0, 315)}
    }
    
    for i, dirInfo in ipairs(directions) do
        local button = Instance.new("TextButton")
        button.Name = dirInfo.name
        button.Size = UDim2.new(0, 60, 0, 60)
        button.Position = dirInfo.pos
        button.Text = dirInfo.name
        button.TextSize = 14
        button.BackgroundColor3 = Color3.fromRGB(100, 100, 200)
        button.TextColor3 = Color3.new(1, 1, 1)
        button.Parent = controlPanel
        
        button.MouseButton1Click:Connect(function()
            _G.moveDirection = dirInfo.dir
            UpdatePartMovement()
            
            local originalColor = button.BackgroundColor3
            button.BackgroundColor3 = Color3.fromRGB(255, 255, 0)
            delay(0.2, function()
                button.BackgroundColor3 = originalColor
            end)
        end)
    end
    
    -- 翻转控制标题
    local flipLabel = Instance.new("TextLabel")
    flipLabel.Name = "FlipLabel"
    flipLabel.Size = UDim2.new(1, 0, 0, 40)
    flipLabel.Position = UDim2.new(0, 0, 0, 390)
    flipLabel.Text = "翻转控制"
    flipLabel.TextColor3 = Color3.new(1, 1, 1)
    flipLabel.BackgroundTransparency = 1
    flipLabel.TextSize = 20
    flipLabel.Parent = controlPanel
    
    -- 翻转按钮
    local flipButtons = {
        {name = "左翻转", axis = "Y", value = -1, pos = UDim2.new(0.2, -30, 0, 440)},
        {name = "右翻转", axis = "Y", value = 1, pos = UDim2.new(0.8, -30, 0, 440)},
        {name = "上翻转", axis = "X", value = 1, pos = UDim2.new(0.5, -30, 0, 400)},
        {name = "下翻转", axis = "X", value = -1, pos = UDim2.new(0.5, -30, 0, 480)}
    }
    
    for i, flipInfo in ipairs(flipButtons) do
        local button = Instance.new("TextButton")
        button.Name = flipInfo.name
        button.Size = UDim2.new(0, 60, 0, 40)
        button.Position = flipInfo.pos
        button.Text = flipInfo.name
        button.TextSize = 14
        button.BackgroundColor3 = Color3.fromRGB(200, 100, 100)
        button.TextColor3 = Color3.new(1, 1, 1)
        button.Parent = controlPanel
        
        button.MouseButton1Click:Connect(function()
            if flipInfo.axis == "X" then
                _G.flipX = flipInfo.value
            elseif flipInfo.axis == "Y" then
                _G.flipY = flipInfo.value
            elseif flipInfo.axis == "Z" then
                _G.flipZ = flipInfo.value
            end
            
            UpdatePartMovement()
            
            local originalColor = button.BackgroundColor3
            button.BackgroundColor3 = Color3.fromRGB(255, 255, 0)
            delay(0.2, function()
                button.BackgroundColor3 = originalColor
            end)
        end)
    end
    
    -- 关闭面板按钮
    local closeButton = Instance.new("TextButton")
    closeButton.Name = "ClosePanel"
    closeButton.Size = UDim2.new(0, 100, 0, 40)
    closeButton.Position = UDim2.new(0.5, -50, 0, 530)
    closeButton.Text = "关闭面板"
    closeButton.TextSize = 16
    closeButton.BackgroundColor3 = Color3.fromRGB(200, 100, 100)
    closeButton.TextColor3 = Color3.new(1, 1, 1)
    closeButton.Parent = controlPanel
    
    -- 打开面板按钮 - 移动到右上角
    local openPanelButton = Instance.new("TextButton")
    openPanelButton.Name = "OpenPanel"
    openPanelButton.Size = UDim2.new(0, 120, 0, 40)
    openPanelButton.Position = UDim2.new(1, -160, 0, 70) -- 右上角，在选择模式按钮下方
    openPanelButton.Text = "打开控制面板"
    openPanelButton.TextSize = 14
    openPanelButton.BackgroundColor3 = Color3.fromRGB(100, 100, 200)
    openPanelButton.TextColor3 = Color3.new(1, 1, 1)
    openPanelButton.Visible = true
    openPanelButton.Parent = screenGui
    
    MakeDraggable(openPanelButton)
    
    -- 选择模式状态
    local selectMode = false
    
    -- 鼠标点击事件处理
    local function onMouseClick()
        if not selectMode then return end
        
        local targetPart = getTargetPart()
        if targetPart then
            if _G.selectedPart == targetPart then
                -- 如果点击已选择的零件，取消选择
                DeselectPart()
            else
                -- 尝试选择新零件
                local success = SelectPart(targetPart)
                if not success then
                    -- 显示无法选择的消息
                    local message = Instance.new("Message")
                    message.Text = "无法控制此物体"
                    message.Parent = Workspace
                    delay(2, function()
                        message:Destroy()
                    end)
                end
            end
        end
    end
    
    -- 连接鼠标点击事件
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        
        if input.UserInputType == Enum.UserInputType.MouseButton1 or 
           input.UserInputType == Enum.UserInputType.Touch then
            onMouseClick()
        end
    end)
    
    -- 速度按钮功能
    speedUpButton.MouseButton1Click:Connect(function()
        _G.floatSpeed = math.clamp(_G.floatSpeed + 5, 1, 50)
        speedLabel.Text = "速度: " .. _G.floatSpeed
        UpdatePartMovement()
        
        local originalColor = speedUpButton.BackgroundColor3
        speedUpButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        delay(0.2, function()
            speedUpButton.BackgroundColor3 = originalColor
        end)
    end)
    
    speedDownButton.MouseButton1Click:Connect(function()
        _G.floatSpeed = math.clamp(_G.floatSpeed - 5, 1, 50)
        speedLabel.Text = "速度: " .. _G.floatSpeed
        UpdatePartMovement()
        
        local originalColor = speedDownButton.BackgroundColor3
        speedDownButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        delay(0.2, function()
            speedDownButton.BackgroundColor3 = originalColor
        end)
    end)
    
    -- 停止移动按钮功能
    stopButton.MouseButton1Click:Connect(function()
        _G.floatSpeed = 0
        UpdatePartMovement()
        speedLabel.Text = "速度: " .. _G.floatSpeed
        
        local originalColor = stopButton.BackgroundColor3
        stopButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        delay(0.2, function()
            stopButton.BackgroundColor3 = originalColor
        end)
    end)
    
    -- 停止翻转按钮功能
    stopFlipButton.MouseButton1Click:Connect(function()
        StopFlip()
        
        local originalColor = stopFlipButton.BackgroundColor3
        stopFlipButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        delay(0.2, function()
            stopFlipButton.BackgroundColor3 = originalColor
        end)
    end)
    
    -- 选择模式开关功能 - 修改为不打开控制面板
    selectModeButton.MouseButton1Click:Connect(function()
        selectMode = not selectMode
        if selectMode then
            selectModeButton.Text = "选择模式: 开启"
            selectModeButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
            print("选择模式已开启")
        else
            selectModeButton.Text = "选择模式: 关闭"
            selectModeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
            print("选择模式已关闭")
        end
    end)
    
    -- 关闭面板功能
    closeButton.MouseButton1Click:Connect(function()
        controlPanel.Visible = false
        openPanelButton.Visible = true
        print("控制面板已关闭")
    end)
    
    -- 打开面板功能
    openPanelButton.MouseButton1Click:Connect(function()
        controlPanel.Visible = true
        openPanelButton.Visible = false
        print("控制面板已打开")
    end)
    
    return screenGui
end

-- 添加错误处理
local success, err = pcall(function()
    CreateMobileGUI()
end)

if not success then
    warn("GUI创建失败: " .. tostring(err))
    
    -- 显示错误信息
    local errorMsg = Instance.new("Message")
    errorMsg.Text = "漂浮控制GUI初始化失败: " .. tostring(err)
    errorMsg.Parent = Workspace
    delay(5, function()
        errorMsg:Destroy()
    end)
end

print("单一物体漂浮控制脚本已加载成功!")